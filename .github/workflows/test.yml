name: test

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pre-commit
          key: ${{ runner.os }}-pip-2
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - run: python -m pip install pre-commit
      - run: pre-commit run --all-files
  get-python-versions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: echo "::set-output name=matrix::$(python .github/scripts/get_python_versions.py)"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
  test:
    needs: [ linting, get-python-versions ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ${{ fromJson(needs.get-python-versions.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: snok/install-poetry@v1.1.6
        with:
          version: 1.2.0a1
          virtualenvs-in-project: true
      - uses: actions/cache@v2
        id: cache-venv
        with:
          path: .venv
          key: ${{ hashFiles('**/poetry.lock') }}-3
      - run: poetry install --no-interaction --no-root
        if: steps.cache-venv.outputs.cache-hit != 'true'
      - run: poetry install --no-interaction
      - run: poetry run pytest -m "not unsupported"
