name: test

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pre-commit
          key: ${{ runner.os }}-pip-2
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - run: python -m pip install pre-commit
      - run: pre-commit run --all-files
  test:
    needs: linting
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.7", "3.8", "3.9" ]
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: snok/install-poetry@v1.1.2
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: .venv
          key: ${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-3
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
        if: steps.cache-venv.outputs.cache-hit != 'true'
      - run: pip install flake8==${{ matrix.flake8-version }}
      - name: Install package
        run: poetry install --no-interaction
      - name: Run tests
        run: |
          source .venv/bin/activate
          poetry run pytest
